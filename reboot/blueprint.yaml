tosca_definitions_version: cloudify_dsl_1_1

# Import common definitions
imports:
  - http://www.getcloudify.org/spec/cloudify/3.2.1/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.2.1/plugin.yaml
  - plugins/reboot/plugin.yaml

inputs:
  server_image_id:
    default: 564be9dd-5a06-4a26-ba50-9453f972e483
    type: string
    description: >
      OpenStack image UUID for the host servers
  server_image_flavor:
    default: 101
    type: integer
    description: >
      OpenStack image flavor code for the host servers

# Types
node_types:
  local.nodes.Server:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      image: { default: { get_input: server_image_id } }
      flavor: { default: { get_input: server_image_flavor } }
        
# Actual server / app deployment definitions
node_templates:
  # VM
  host_01:
    type: local.nodes.Server
    properties:
      resource_id: Reboot-Host-01
        
  # Some application that forces a reboot of the host
  myapplication_01:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/prereboot.py
    relationships:
      - type: cloudify.relationships.contained_in
        target: host_01
  
  # This will spin until dependencies have rebooted
  reboot_module:
    type: reboot.nodes.Facilitator
    relationships:
      - type: cloudify.relationships.depends_on
        target: myapplication_01
  
  # This will execute as soon as the reboots are complete
  postreboot_module:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/postreboot.py
    relationships:
      - type: cloudify.relationships.contained_in
        target: host_01
      - type: cloudify.relationships.depends_on
        target: reboot_module
  