###############################################################################
## This will spin up 2x Oracle RAC servers (not really, but we'll call
## them that) and have them both dynamically create SSH keys on their local
## filesystem (oracle_key_path). A 3rd node called fake_module will spin up
## after both of the Oracle RAC servers have completely started + configured
## themselves.  This 3rd node will facilitate exchanging each of the newly
## created keys on the RAC servers between eachother.  RAC#1 will recieve
## RAC#2's key and vice-versa in the directory that oracle_key_path includes.
## The exchanged key will end up with ".peer" extension to whatever
## oracle_key_path is.
##
## A pre-created key pair is passed in via ssh_tmp_priv_key_path and
## ssh_tmp_pub_key_path. The public portion is installed in authorized_keys
## of each of the RAC servers.  The private portion is given to the
## fake_module so it may SCP information between the RAC severs later. 
##
## Note - This is a PoC and received minimal security consideration.
###############################################################################

tosca_definitions_version: cloudify_dsl_1_1

# Import common definitions
imports:
  - http://www.getcloudify.org/spec/cloudify/3.2.1/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-openstack-plugin/1.2.1/plugin.yaml
  
# Accepted inputs
inputs:
  os_external_network:
    description: "External network (name) in OpenStack"
    default: "Ext-Net"
  os_internal_network:
    description: "Internal network (name) in OpenStack"
    default: "Joscor-Int-Net-02"
  os_internal_subnet:
    description: "Internal network (name) in OpenStack"
    default: "Joscor-Int-Subnet-02"
  os_security_group:
    description: "Security Group (name) in OpenStack"
    default: "Joscor-Sec-02"
  os_host_image_id:
    description: "Image UUID for the host server"
    default: "564be9dd-5a06-4a26-ba50-9453f972e483"
  agent_user:
    description: "Cloudify deployment username"
    default: "ubuntu"
  agent_ssh_key:
    description: "Cloudify deployment SSH key file path"
    default: "/root/.ssh/agent_key.pem"
        
# Actual server / app deployment definitions
node_templates:
  #####################################
  ## OpenStack Networking Components ##
  #####################################
  # Network for app
  host_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: os_internal_network }
      
  # Subnet for app
  host_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: os_internal_subnet }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              cidr: 172.16.0.0/24
              ip_version: 4
    relationships:
      - target: host_network
        type: cloudify.relationships.contained_in
  
  host_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      resource_id: { get_input: os_security_group }
  
  #####################
  ## OpenStack Hosts ##
  #####################
  # Container (host_01)
  host:
    type: cloudify.openstack.nodes.Server
    properties:
      resource_id: "Oracle-Host-01"
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              image: { get_input: os_host_image_id }
              flavor: 102
    relationships:
      - target: host_network
        type: cloudify.relationships.connected_to
      - target: host_subnet
        type: cloudify.relationships.depends_on
      - target: host_security_group
        type: cloudify.openstack.server_connected_to_security_group
        
  ###################################
  ## OpenStack Application Servers ##
  ###################################
  app_server:
    type: cloudify.nodes.ApplicationServer
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
 
