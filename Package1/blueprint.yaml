###################################################################################
## This will spin up multiple application servers and have them dynamically
## create SSH keys on their local filesystem (exchange_key_path). A 3rd node
## called facilitator_module will spin up after all of the servers have completely
## configured themselves. This node will facilitate exchanging each of the newly
## created keys on the servers between eachother.  APP#1 will recieve
## APP#2's key and vice-versa in the directory that exchange_key_path includes.
##
## A pre-created key pair is passed in via ssh_tmp_priv_key_path and
## ssh_tmp_pub_key_path. The public portion is installed in authorized_keys
## of each of the app servers.  The private portion is given to the
## facilitator_module so it may SCP information between the app severs later. 
##
## Note - This is a PoC and received minimal security consideration.
###################################################################################

tosca_definitions_version: cloudify_dsl_1_1

# Import common definitions
imports:
  - http://www.getcloudify.org/spec/cloudify/3.2.1/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.2.1/plugin.yaml
  - plugins/exchange/plugin.yaml
  
# Accepted inputs
inputs:
  os_host_image_id:
    description: "Image UUID for the host server"
    default: "564be9dd-5a06-4a26-ba50-9453f972e483"
  os_host_image_flavor:
    description: "Image size for the host server"
    default: 102
  # Temporary SSH key so we can manage the servers
  ssh_tmp_priv_key_path:
    description: "Relative path (from blueprint) to the temporary private key to SSH between app servers"
    default: "keys/temp.key"
  ssh_tmp_pub_key_path:
    description: "Relative path (from blueprint) to the temporary public key to allow SSH into app servers"
    default: "keys/temp.key.pub"
  # Location where the servers will store their dynamically generated keys
  exchange_key_path:
    description: "Absolute path to where the keys will be generated / retrieved (creates file + file.pub)"
    default: "/tmp/exchange/poc.key"

# Types
node_types:
  poc.nodes.Server:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      image:
        default: { get_input: os_host_image_id }
      flavor:
        default: { get_input: os_host_image_flavor }
    
  poc.nodes.ApplicationModule:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      tmp_pub_key_path:
        default: { get_input: ssh_tmp_pub_key_path }
      exchange_key_path:
        default: { get_input: exchange_key_path }
    interfaces:
      cloudify.interfaces.lifecycle:
        configure: scripts/poc-allow-ssh.py
        
# Actual server / app deployment definitions
node_templates:
  ###########
  ## Hosts ##
  ###########
  host_01:
    type: poc.nodes.Server
    properties:
      resource_id: "POC-Host-01"
        
  host_02:
    type: poc.nodes.Server
    properties:
      resource_id: "POC-Host-02"
        
  ##################
  ## Applications ##
  ##################
  app_01:
    type: poc.nodes.ApplicationModule
    relationships:
      - type: cloudify.relationships.contained_in
        target: host_01

  app_02:
    type: poc.nodes.ApplicationModule
    relationships:
      - type: cloudify.relationships.contained_in
        target: host_02
  
  #######################################
  ## Module to facilitate key exchange ##
  #######################################
  facilitator_module:
    type: exchange.nodes.Facilitator
    relationships:
      - type: cloudify.relationships.depends_on
        target: app_01
      - type: cloudify.relationships.depends_on
        target: app_02